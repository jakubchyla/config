#! /bin/env bash
# vim:foldmethod=marker

#ohmyzsh {{{
ohmyzsh(){
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
}
#}}}

# cross-compiler {{{
cross-compiler(){
    CURRENT_DIR=`pwd`

    BINUTILS_URL="https://ftp.gnu.org/gnu/binutils/binutils-2.34.tar.xz"
    BINUTILS_FILENAME=`echo $BINUTILS_URL | grep -P --only-matching "binutils-\d\.\d\d"`
    GCC_URL="https://ftp.gnu.org/gnu/gcc/gcc-9.3.0/gcc-9.3.0.tar.xz"
    GCC_FILENAME=`echo $GCC_URL | grep -P --only-matching "gcc-\d\.\d\.\d" | head -n 1`

    if ! [ -d ~/opt/cross_compiler ];then mkdir -p ~/opt/cross_compiler; fi

    export PREFIX="$HOME/opt/cross_compiler"
    export TARGET="i686-elf"
    export PATH="$PREFIX/bin:$PATH"

    cd /tmp
    curl -o $BINUTILS_FILENAME.tar.xz $BINUTILS_URL
    curl -o $GCC_FILENAME.tar.xz $GCC_URL

    tar xJf $BINUTILS_FILENAME.tar.xz
    tar xJf $GCC_FILENAME.tar.xz

    cd $BINUTILS_FILENAME
    mkdir build; cd build
    ../configure --target=$TARGET --prefix="$PREFIX" --with-sysroot \
        --disable-nls --disable-werror
    make -j `nproc`
    make -j `nproc` install

    cd /tmp

    cd $GCC_FILENAME
    mkdir build; cd build
    ../configure --target=$TARGET --prefix="$PREFIX" --disable-nls \
        --enable-languages=c,c++ --without-headers
    make -j `nproc` all-gcc
    make -j `nproc` all-target-libgcc
    make -j `nproc` install-gcc
    make -j `nproc` install-target-libgcc
}
#}}}

# setup-env {{{
setup-env(){
    printf "NOT TESTED!\n"
    #ohmyzsh
    #PREFIX="$(realpath $(dirname $0))"
    #$PREFIX/backup copy-to-local $PREFIX/db
}
#}}}

#help {{{
help(){
    cat << EOF
Usage:
  setup COMMANDS

Some automation scripts.

Commands:
  ohmyzsh               Install oh-my-zsh (noninteractive).
  cross-compiler        Build cross-compiler (gcc) and install at ~/opt/cross_compiler.
  setup-env             Install oh-my-zsh and copy config files.
EOF
}
#}}}

#main {{{
main(){
    if [ -z "$1" ]; then
        printf "no command specified\n"
        exit -1
    fi

    case $1 in
    -h)
        help
        shift
    ;;
    --help)
        help
        shift
    ;;
    ohmyzsh)
        ohmyzsh
        shift
    ;;
    cross-compiler)
        cross_compiler
        shift
    ;;
    setup-env)
        setup-env
        shift
    ;;
    *)
        help
        exit -1
    esac

    exit 0

}
#}}}

main "$@"
